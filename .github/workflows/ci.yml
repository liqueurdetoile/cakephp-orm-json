name: CI

on:
  push:
    branches:
      - '2.x-next'
  pull_request:
    branches:
      - '*'
#  schedule:
#    - cron: "0 0 1 * *"

jobs:
  testsuite:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.4']
        db-family: ['mysql']
        db-version: ['mysql-5.7']
        # include:
        #   - php-version: '7.4'
        #     db-version: 'mysql-5.7'
          # - php-version: '7.4'
          #   db-type: 'mariadb-10.2'
          # - php-version: '7.4'
          #   db-type: 'mariadb-10.9'

    steps:
    - uses: actions/checkout@v3

    - name: Setup MySQL 5.7
      if: matrix.db-version == 'mysql-5.7'
      run: docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=cakephp_orm_json -p 3306:3306 -d mysql:5.7 --character-set-server=utf8

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl, apcu, memcached, redis, pdo_${{ matrix.db-family }}
        ini-values: apc.enable_cli = 1
        coverage: pcov

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Get date part for cache key
      id: key-date
      run: echo "::set-output name=date::$(date +'%Y-%m')"

    - name: Cache composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

    - name: Composer install
      run: |
        if ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
          composer update --prefer-lowest --prefer-stable
        elif ${{ matrix.php-version == '8.2' }}; then
          composer update --ignore-platform-req=php
        else
          composer update
        fi

    - name: Wait for MySQL
      if: matrix.db-family == 'mysql'
      run: while ! `mysqladmin ping -h 127.0.0.1 --silent`; do printf 'Waiting for MySQL...\n'; sleep 2; done;

    - name: Run PHPUnit
      run: |
        if [[ ${{ matrix.db-family }} == 'mysql' ]]; then export DB_URL='mysql://root:root@127.0.0.1/cakephp_orm_json'; fi
        vendor/bin/phpunit

    - name: Run PHP CodeSniffer
      if: ${{ matrix.php-version == '7.4' && matrix.db-version == 'mysql-5.7'}}
      run: vendor/bin/phpcs --report=checkstyle src/ tests/ | cs2pr

    - name: Run PHPstan
      if: ${{ matrix.php-version == '7.4' && matrix.db-version == 'mysql-5.7'}}
      run: composer stan --error-format=github
